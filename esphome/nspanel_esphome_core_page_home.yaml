#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Home                                                                  #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_HOME: '1UL << 17'

globals:
  ##### Chips #####
  - id: home_chip_font_id
    type: uint8_t
    restore_value: true
    initial_value: '7'

  #### Custom buttons ####
  - id: home_custom_buttons_font_id
    type: uint8_t
    restore_value: true
    initial_value: '8'

script:
  - id: !extend boot_progress_dump
    then:
      - script.execute:
          id: boot_progress_dump_item
          step: ${BOOT_STEP_PAGE_HOME}
          step_name: Page Home

  - id: chip_font
    mode: restart
    parameters:
      chip_font: uint8_t
      boot: bool
    then:
      - lambda: |-
          if (boot or chip_font != id(home_chip_font_id))
            id(home_chip_font_id) = chip_font;
          set_component_font->execute("home", "wifi_icon", chip_font);
          set_component_font->execute("home", "chip_relay1", chip_font);
          set_component_font->execute("home", "chip_relay2", chip_font);
          set_component_font->execute("home", "chip_climate", chip_font);
      - repeat:
          count: 7
          then:
            - delay: !lambda return (10*(id(nextion_queue)+disp1->queue_size()+tf_uart->available()));
            - lambda: |-
                disp1->send_command_printf("home.chip%02" PRIu32 ".font=%" PRIu8, iteration, chip_font);
      - script.execute:
          id: boot_progress
          step: ${BOOT_STEP_PAGE_HOME}
          step_name: Page Home - Chip font

  - id: custom_buttons_font
    mode: restart
    parameters:
      custom_buttons_font: uint8_t
      boot: bool
    then:
      - lambda: |-
          if (boot or custom_buttons_font != id(home_custom_buttons_font_id))
            id(home_custom_buttons_font_id) = custom_buttons_font;
          set_component_font->execute("home","bt_notific", custom_buttons_font);
          set_component_font->execute("home","bt_qrcode", custom_buttons_font);
          set_component_font->execute("home", "bt_entities", custom_buttons_font);
      - repeat:
          count: 7
          then:
            - delay: !lambda return (10*(id(nextion_queue)+disp1->queue_size()+tf_uart->available()));
            - lambda: |-
                disp1->send_command_printf("home.button%02" PRIu32 ".font=%" PRIu8, iteration, custom_buttons_font);
      - script.execute:
          id: boot_progress
          step: ${BOOT_STEP_PAGE_HOME}
          step_name: Page Home - Custom buttons font

  - id: !extend boot_sequence
    then:
      - lambda: |-
          boot_log->execute("Boot", "Set Home page elements");
          chip_font->execute(id(home_chip_font_id), true);
          custom_buttons_font->execute(id(home_custom_buttons_font_id), true);

  - id: !extend page_changed
    then:
      - lambda: |-
          if (current_page->state == "home")
            page_home->execute();

  - id: page_home
    mode: restart
    then:  # There's nothing to do so far

  - id: !extend set_var_int
    then:
      - lambda: |-
          if (component == "chip_font") chip_font->execute(val, false);
          else if (component == "custom_buttons_font") custom_buttons_font->execute(val, false);

  - id: !extend stop_all
    then:
      - script.stop: chip_font
      - script.stop: custom_buttons_font
      - script.stop: page_home
...
