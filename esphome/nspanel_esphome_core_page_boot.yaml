#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page keyb_num                                                              #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
substitutions:
  BOOT_STEP_PAGE_BOOT: '1UL << 29'

script:
  - id: !extend boot_progress_dump
    then:
      - script.execute:
          id: boot_progress_dump_item
          step: ${BOOT_STEP_PAGE_BOOT}
          step_name: Page Boot

  - id: page_boot
    mode: single
    then:
      - script.execute: page_boot_exit
      - script.execute:
          id: send_command
          cmd: 'tm_esphome.en=0'
      - script.execute:
          id: send_command
          cmd: 'esphome=0'
      - if:
          condition:
            - lambda: |-
                #ifdef ARDUINO
                return true;
                #else
                return false;
                #endif
          then:
            - script.execute:
                id: set_component_text
                component: sys_framework
                text: 'Framework: Arduino'
          else:
            - script.execute:
                id: set_component_text
                component: sys_framework
                text: 'Framework: ESP-IDF'
      - script.execute:
          id: boot_progress
          step: ${BOOT_STEP_PAGE_BOOT}
          step_name: Page Boot

  - id: page_boot_exit
    mode: restart
    then:
      - wait_until:
          condition:
            - not:
                - text_sensor.state:
                    id: current_page
                    state: boot
          timeout: 180s
      - if:
          condition:
            - text_sensor.state:
                id: current_page
                state: boot
          then:
            - if:
                condition:
                  - text_sensor.state:
                      id: current_page
                      state: boot
                then:
                  - lambda: |-
                      ESP_LOGI("script.page_boot_exit", "Jump to wake-up page: %s", wakeup_page_name->state.c_str());
                  - script.execute:
                      id: goto_page
                      page: !lambda return wakeup_page_name->state.c_str();
                  - script.execute:
                      id: set_variable_value
                      variable: wakeup_page_id
                      val: !lambda return get_page_id(wakeup_page_name->state.c_str());

  - id: !extend stop_all
    then:
      - script.stop: page_boot
      - script.stop: page_boot_exit
...
