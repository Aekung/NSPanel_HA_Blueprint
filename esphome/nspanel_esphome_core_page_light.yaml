#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME CORE - Page Light                                                                 #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################

---
display:
  - id: !extend disp1
    on_touch:
      then:
        - lambda: |-
            if (page_id == 10) {  // Page Light
              switch (component_id) {
                case 30:  // power_button
                  if (!touch_event) {  // Release
                    ha_call_action->execute("light.toggle", "", "", detailed_entity->state.c_str());
                  }
                  break;
              }
            }

script:
  - id: !extend boot_progress_dump
    then:
      - lambda: |-
          ESP_LOGCONFIG("script.boot_progress_dump", " - Page Light:           %s", is_boot_step_completed(BOOT_STEP_PAGE_LIGHT) ? "Completed" : "PENDING");

  - id: !extend boot_sequence
    then:
      - lambda: |-
          boot_progress->execute(BOOT_STEP_PAGE_LIGHT, "Page Light");

  - id: !extend event_from_display
    then:
      - lambda: |-
          if (page == "light") {
            if (key == "brightness_pct" or key == "color_temp") {
              ha_call_action->execute("light.turn_on", key.c_str(), value.c_str(), detailed_entity->state.c_str());
            } else if (component == "rgb_color") {
              JsonArray rgb_color = json["value"];
              if (rgb_color.size() == 3) {
                esphome::api::CustomAPIDevice ha_event;
                ha_event.fire_homeassistant_event("esphome.nspanel_ha_blueprint",
                  {
                    {"device_name", device_name->state.c_str()},
                    {"esphome_version", "${version}"},
                    {"type", "action_call"},
                    {"action", "light.turn_on"},
                    {"key", "rgb_color"},
                    {"red",to_string(rgb_color[0].as<int>())},
                    {"green",to_string(rgb_color[1].as<int>())},
                    {"blue",to_string(rgb_color[2].as<int>())},
                    {"entity", detailed_entity->state.c_str()}
                  });
              }
            }
          }

#   - id: !extend page_changed
#     then:
#       - lambda: |-
#           if (current_page->state == "light") page_light->execute();

#   - id: page_light
#     mode: restart
#     then:  # There's nothing here so far

#   - id: !extend stop_all
#     then:
#       - script.stop: page_light
...
